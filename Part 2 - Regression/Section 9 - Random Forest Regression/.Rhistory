split = sample.split(dataset$Profit,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
View(test_set)
View(test_set)
View(dataset)
View(dataset)
#Fitting Multiple Linear Regression to the training set
regression = lm(formula = Profit ~ .,
data = training_set)
summary(regression)
y_pred = predict(regression, newdata = test_set)
View(test_set)
View(test_set)
y_pred
#Building the optimal model using Bckward Elimination
regression = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regression)
regression = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regression)
regression = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regression)
regression = lm(formula = Profit ~ R.D.Spend ,
data = dataset)
summary(regression)
source('~/.active-rstudio-document')
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset= read.csv('Position_Salaries.CSV')
View(dataset)
View(dataset)
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
View(dataset)
View(dataset)
#Fitting Linear Regression to the dataset
lin_reg = lm(fromula = Salary ~ .,
data=dataset)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
poly_reg = lm(fromula = Salary ~ .,
data = dataset)
Summary(poly_reg)
dataset$Level2 = dataset$Level^2
dataset$Level2 = dataset$Level^3
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_reg = lm(fromula = Salary ~ .,
data=dataset)
summary(poly_reg)
library("ggplot2", lib.loc="~/R/win-library/3.3")
library(ggplot2)
ggplot()+
geom_point(aes(X =dataset$level ,Y =dataset$Salary),
colour = 'red')+
geom_line(aes(x=dataset$Level,y=predict(lin_reg,newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x =dataset$level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x =dataset$Level,y=predict(lin_reg,newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
ggplot()+
geom_point(aes(x =dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x =dataset$Level,y=predict(lin_reg,newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
View(dataset)
View(dataset)
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
View(dataset)
View(dataset)
lin_reg = lm(fromula = Salary ~ .,
data=dataset)
lin_reg = lm(fromula = Salary ~ .,
data = dataset)
library(ggplot2)
ggplot()+
geom_point(aes(x =dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x =dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(lin_reg)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_reg = lm(fromula = Salary ~ .,
data=dataset)
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_reg = lm(fromula = Salary ~ .,
data=dataset)
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
#visualising the Polynomial Regression result
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'red')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'red')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
y_pred= predict(poly_reg)
y_pred
View(dataset)
View(dataset)
poly_reg = lm(fromula = Level ~ .,
data=dataset)
y_pred= predict(poly_reg)
y_pred
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
lin_reg = lm(fromula = Salary ~ .,
data = dataset)
lin_pred= predict(lin_reg)
lin_pred
lin_reg = lm(fromula = Level~ .,
data = dataset)
lin_pred= predict(lin_reg)
lin_pred
View(dataset)
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
View(dataset)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
lin_reg = lm(fromula = Salary ~ .,
data = dataset)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
#Importing the dataset
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
lin_pred= predict(lin_reg)
#Fitting Polynomial Regression to tht dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ .,
data=dataset)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(linear Regression)')+
xlab('Level')+
ylab('Salary')
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
dataset$Level4 = dataset$Level^4
#visualising the Polynomial Regression result
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
poly_reg = lm(formula = Salary ~ .,
data=dataset)
#visualising the Polynomial Regression result
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
dataset$Level4 = dataset$Level^4
dataset$Level5 = dataset$Level^5
poly_reg = lm(formula = Salary ~ .,
data=dataset)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(polynomial Regression)')+
xlab('Level')+
ylab('Salary')
y_pred =  predict(lin_reg,data.frame(Level = 6.5))
View(dataset)
View(dataset)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data=dataset)
View(dataset)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
View(dataset)
View(dataset)
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
View(dataset)
View(dataset)
lin_reg = lm(formula = Salary ~ .,
data = dataset)
lin_pred= predict(lin_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
View(dataset)
View(dataset)
poly_reg = lm(formula = Salary ~ .,
data=dataset)
y_pred =  predict(poly_reg,data.frame(Level = 6.5,
Level2 =6.5^2,
Level3= 6.5^3,
Level4=6.5^4))
dataset$Level5 = dataset$Level^5
poly_reg = lm(formula = Salary ~ .,
data=dataset)
y_pred =  predict(poly_reg,data.frame(Level = 6.5,
Level2 =6.5^2,
Level3= 6.5^3,
Level4=6.5^4,
Level5 =6.5^5))
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
#Fitting Polynomial Regression to tht dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data=dataset)
y_pred =  predict(poly_reg,data.frame(Level = 6.5,
Level2 =6.5^2,
Level3= 6.5^3,
Level4=6.5^4))
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
clearPushBack(clearPushBac)
clear()
clearPushBack()
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
install.packages('e1071')
library("e1071", lib.loc="~/R/win-library/3.3")
#Importing the dataset
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
#Fitting SVR to tht dataset
# install.packages('e1071')
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression')
y_pred =  predict(regressor,data.frame(Level = 6.5))
#visualising the SVR result
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(SVR)')+
xlab('Level')+
ylab('Salary')
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression")
library("rpart", lib.loc="C:/Program Files/R/R-3.3.2/library")
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression")
#Importing the dataset
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
#Importing the dataset
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
View(dataset)
#Fitting Decision Tree Regression to tht dataset
regressor =  rpart(formula = Salary ~ .,
data = dataset)
#Predict a new result
y_pred =  predict(regressor,data.frame(Level = 6.5))
#visualising Decision Tree Regression  result
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(Decision Tree Regression)')+
xlab('Level')+
ylab('Salary')
#Fitting Decision Tree Regression to tht dataset
regressor =  rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
y_pred =  predict(regressor,data.frame(Level = 6.5))
#visualising Decision Tree Regression  result
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue')+
ggtitle('Truth or Bluff(Decision Tree Regression)')+
xlab('Level')+
ylab('Salary')
#visualising the Regression  Model result (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level),max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Truth or Bluff(Decision Tree Regression)')+
xlab('Level')+
ylab('Salary')
#visualising the Regression  Model result (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level),max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Truth or Bluff(Decision Tree Regression)')+
xlab('Level')+
ylab('Salary')
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 9 - Random Forest Regression")
setwd("E:/Machine learning/Machine-Learning-A-Z/Part 2 - Regression/Section 9 - Random Forest Regression")
#Importing the dataset
dataset= read.csv('Position_Salaries.CSV')
dataset=dataset[2:3]
install.packages("randomForest")
library(randomForest)
View(dataset)
# install.packages("randomForest")
library(randomForest)
regressor = randomForest(X = dataset[1],
y= dataset$Salary,
ntree = 10)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y= dataset$Salary,
ntree = 10)
#visualising Random Forest Regression result (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level),max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Truth or Bluff(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
#visualising Random Forest Regression result (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level),max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Truth or Bluff(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
y_pred =  predict(regressor,data.frame(Level = 6.5))
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y= dataset$Salary,
ntree = 100)
y_pred =  predict(regressor,data.frame(Level = 6.5))
#visualising Random Forest Regression result (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level),max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Truth or Bluff(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y= dataset$Salary,
ntree = 300)
y_pred =  predict(regressor,data.frame(Level = 6.5))
#visualising Random Forest Regression result (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level),max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x = dataset$Level ,y =dataset$Salary),
colour = 'red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle('Truth or Bluff(Random Forest Regression)')+
xlab('Level')+
ylab('Salary')
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y= dataset$Salary,
ntree = 400)
#Predict a new result
y_pred =  predict(regressor,data.frame(Level = 6.5))
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y= dataset$Salary,
ntree = 500)
#Predict a new result
y_pred =  predict(regressor,data.frame(Level = 6.5))
